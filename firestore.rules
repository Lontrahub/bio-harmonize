
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow user creation on signup
      allow create: if isSignedIn();
      
      // Allow users to read their own profile, and admins to read any profile
      allow get: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      
      // Allow users to update their own profile (for shopping list, etc.)
      allow update: if isSignedIn() && request.auth.uid == userId;

      // Allow admins to list all users for the dashboard
      allow list: if isSignedIn() && isAdmin();

      // Disallow deleting user profiles from the client
      allow delete: if false;
    }
    
    // Rules for the 'cleanseContent' collection (recipes, shopping list, etc.)
    match /cleanseContent/{docId} {
      // Allow any signed-in user to read content
      allow read: if isSignedIn();
      // Disallow writing to content from the client
      allow write: if false;
    }
    
    // Rules for the 'userProgress' collection
    match /userProgress/{progressId} {
      // Allow users to create/write their own progress documents
      allow create, write: if isSignedIn() && request.auth.uid == request.resource.data.userId;

      // Allow users to get their own progress. Admins can get any.
      allow get: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      
      // Allow admins to list any progress. Allow users to list ONLY their own.
      allow list: if (isSignedIn() && isAdmin()) || (isSignedIn() && request.query.where.get("userId") == request.auth.uid);

      // Allow users to delete their own progress entries (for unchecking tasks)
      allow delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
  }
}
