rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return getUserData(userId).role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user profile
      // A user can read their own profile
      allow read: if isSignedIn() && (isAdmin(request.auth.uid) || request.auth.uid == userId);
      
      // A user can update their own profile
      // An admin can update any user profile
      allow update: if isSignedIn() && (isAdmin(request.auth.uid) || request.auth.uid == userId);

      // Only authenticated users can create their own profile document
      allow create: if isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'userProgress' collection
    match /userProgress/{progressId} {
      // Admins can read any progress
      // Users can read their own progress
      allow read: if isSignedIn() && (isAdmin(request.auth.uid) || resource.data.userId == request.auth.uid);

      // Users can create and delete their own progress documents
      allow create, delete: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    // Rules for the 'cleanseContent' collection (public-read)
    match /cleanseContent/{document=**} {
      // Any authenticated user can read the cleanse content
      allow read: if isSignedIn();
      // Only admins can write/update cleanse content
      allow write: if isSignedIn() && isAdmin(request.auth.uid);
    }
  }
}
