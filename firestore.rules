
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin.
    // It checks for the existence of the user's document and their role.
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection.
    match /users/{userId} {
      // Admins can read and update any user document.
      // Users can only read and update their own document.
      allow read, update: if request.auth.uid == userId || isAdmin();
      // Users can only create their own user document upon signup.
      allow create: if request.auth.uid == userId;
    }

    // Rules for the 'cleanseContent' collection.
    // This content is public to all authenticated users.
    match /cleanseContent/{document=**} {
      allow read: if request.auth != null;
    }

    // Rules for the 'userProgress' collection.
    match /userProgress/{progressId} {
      // Admins can read all progress documents.
      // Authenticated users can read their own progress documents.
      allow read: if isAdmin() || (request.auth != null && resource.data.userId == request.auth.uid);
      // Users can create progress documents only for themselves.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Users can delete progress documents only for themselves (for un-checking a task).
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
