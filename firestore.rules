
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // `users` collection rules
    match /users/{userId} {
      // Admins can read any user profile.
      // Authenticated users can read their own profile.
      allow read: if isAuth() && (isAdmin() || isOwner(userId));

      // Authenticated users can update their own profile.
      allow update: if isAuth() && isOwner(userId);

      // New users can create their own profile document.
      allow create: if isAuth() && isOwner(userId);
    }
    
    // `userProgress` collection rules
    match /userProgress/{progressId} {
        // Admins can read any progress document.
        // Users can read their own progress documents.
        allow read: if isAuth() && (isAdmin() || resource.data.userId == request.auth.uid);

        // Users can create their own progress documents.
        allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
        
        // Users can delete their own progress documents.
        allow delete: if isAuth() && resource.data.userId == request.auth.uid;
    }

    // `cleanseContent` collection rules
    match /cleanseContent/{document=**} {
      // Any authenticated user can read the cleanse content (recipes, shopping list, etc.).
      allow read: if isAuth();

      // Nobody can write directly from the client. This should be managed from the Firebase Console.
      allow write: if false;
    }
  }
}
